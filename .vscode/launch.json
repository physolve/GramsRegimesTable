{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Qt: QML: Attach by port",
            "type": "qml",
            "request": "attach",
            "host": "localhost",
            "port": "${command:qt-qml.debugPort}"
        },
        {
            "name": "Qt: Debug with cppdbg and QML debugger",
            "type": "cppdbg",
            "request": "launch",
            "program": "${command:cmake.launchTargetPath}",
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "visualizerFile": "${command:qt-cpp.natvis}",
            "showDisplayString": true,
            "args": [
                "-qmljsdebugger=host:localhost,port:${command:qt-qml.debugPort},block,services:DebugMessages,QmlDebugger,V8Debugger"
            ],
            "linux": {
                "MIMode": "gdb",
                "miDebuggerPath": "/usr/bin/gdb"
            },
            "osx": {
                "MIMode": "lldb"
            },
            "windows": {
                "environment": [
                    {
                        "name": "PATH",
                        "value": "${env:PATH};${command:qt-cpp.qtDir}"
                    },
                    {
                        "name": "QT_QPA_PLATFORM_PLUGIN_PATH",
                        "value": "${command:qt-cpp.QT_QPA_PLATFORM_PLUGIN_PATH}"
                    },
                    {
                        "name": "QML_IMPORT_PATH",
                        "value": "${command:qt-cpp.QML_IMPORT_PATH}"
                    }
                ],
                "MIMode": "gdb",
                "miDebuggerPath": "${command:qt-cpp.minGWgdb}"
            }
        }
    ],
    "compounds": [
        {
            "name": "C++/QML",
            "configurations": ["Qt: Debug with cppdbg and QML debugger", "Qt: QML: Attach by port"],
            "preLaunchTask": "Qt: Acquire Port",
        }
    ]
}